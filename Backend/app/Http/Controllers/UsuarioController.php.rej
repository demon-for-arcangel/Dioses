diff a/Backend/app/Http/Controllers/UsuarioController.php b/Backend/app/Http/Controllers/UsuarioController.php	(rejected hunks)
@@ -35,20 +35,26 @@
                 'audacia' => rand(1, 5),
             ]);
     
-            // Asignar valores aleatorios y protección
-            $this -> asignarProteccion($usuario);
+            $diosSeleccionado = $this -> asignarProteccion($usuario);
     
-            // Verificar si el usuario tiene un humano asociado
             $humano = Humano::where('user_id', $usuario->id)->first();
     
-            if (!$humano) {
-                // Si no hay un humano asociado, crear uno con valores predeterminados
-                $humano = Humano::create([
-                    'user_id' => $usuario->id,
-                    'dios_id' => null,
-                    'destino' => null,
-                    'afinidad' => null,
-                ]);
+            if (!$humano || !$humano->dios_id) {
+                if ($diosSeleccionado && $diosSeleccionado->user){
+                    $afinidad = $this->calcularAfinidad(
+                        $usuario->sabiduria, $usuario->nobleza, $usuario->virtud, $usuario->maldad, $usuario->audacia,
+                        $diosSeleccionado->user->sabiduria, $diosSeleccionado->user->nobleza, $diosSeleccionado->user->virtud, $diosSeleccionado->user->maldad, $diosSeleccionado->user->audacia
+                    );
+
+                    $humano = Humano::create([
+                        'user_id' => $usuario->id,
+                        'dios_id' => $diosSeleccionado->id,
+                        'destino' => null,
+                        'afinidad' => $afinidad,
+                    ]); 
+                }else{
+                    throw new Exception('No se encontró un dios seleccionado o falta la relación de usuario en el dios seleccionado', 404);
+                }           
             }
     
             $msg = ['message' => 'Humano creado exitosamente', 'usuario' => $usuario];
